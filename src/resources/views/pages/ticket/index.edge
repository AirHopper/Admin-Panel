@layout.app({ title: "Tikets List" })
@slot('main')

<div class="p-6 w-full bg-white">
    <!-- Content Head -->
    <div class="flex justify-end items-center mb-2">
        <div class="flex flex-col gap-y-2">
            @component('components/ui/modal', {
                title: 'Add Tiket',
                buttonClass: 'shadow-md py-2 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-300 text-blue-800 hover:bg-blue-400 focus:outline-none focus:bg-blue-200 disabled:opacity-50 disabled:pointer-events-none',
                })
                @slot('header')
                    Add Tiket
                @end
                @slot('content')
                <div class="flex flex-col gap-y-2">
                    <span class="text-xs text-red-500">Just For Transit</span>
                    <form id="searchTransitForm" action="">
                        <div class="flex flex-col gap-x-2 w-full text-center">
                            <div class="w-full mb-3">
                                <label for="departureId" class="text-sm font-medium text-gray-900">Departure</label>
                                <select id="departureId" name="departureId" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3">
                                    <option value="">Choose</option>
                                    @each(data in airports)
                                        <option value="{{ data.iataCode }}">{{ data.City.name }} - ({{ data.iataCode }}) {{ data.name }}</option>
                                    @end
                                </select>
                            </div>
                            <div class="w-full mb-3">
                                <label for="arrivalId" class="text-sm font-medium text-gray-900">Arrival</label>
                                <select id="arrivalId" name="arrivalId" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3">
                                    <option value="">Choose</option>
                                    @each(data in airports)
                                        <option value="{{ data.iataCode }}">{{ data.City.name }} - ({{ data.iataCode }}) {{ data.name }}</option>
                                    @end
                                </select>
                            </div>
                        </div>
                        <button type="submit" class="shadow-md py-2 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-300 text-blue-800 hover:bg-blue-400 focus:outline-none focus:bg-blue-200 disabled:opacity-50 disabled:pointer-events-none text-center w-full justify-center">Search</button>
                    </form>
                </div>

                @end
            @end
        </div>
    </div>
    
    <div class="border-2 rounded-lg p-4 overflow-x-auto text-sm">
        <table class="myTable display" style="width:100%">
            <thead>
                <tr>
                    <th>No</th>
                    <th>Class</th>
                    <th>Transit</th>
                    <th>Departure City</th>
                    <th>Departure Time</th>
                    <th>Arrival City</th>
                    <th>Arrival Time</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody class="text-center">
                @each((data, index) in tickets)
                    <tr>
                        <td>{{ index + 1 }}</td>
                        <td>
                            @if(data.class == 'Economy')    
                                <span class="bg-green-300 text-green-800 px-2 py-1 rounded-lg text-sm">
                                    {{ data.class }}
                                </span>
                            @elseif(data.class == 'Premium_Economy')
                                <span class="bg-blue-300 text-blue-800 px-2 py-1 rounded-lg text-sm">
                                    {{ data.class }}
                                </span>
                            @elseif(data.class == 'Business')
                                <span class="bg-red-300 text-red-800 px-2 py-1 rounded-lg text-sm">
                                    {{ data.class }}
                                </span>
                            @else
                                <span class="bg-purple-300 text-purple-800 px-2 py-1 rounded-lg text-sm">
                                    {{ data.class }}
                                </span>
                            @endif
                        </td>
                        <td>
                            @if(data.isTransits)
                                <span class="bg-green-300 text-green-800 px-2 py-1 rounded-lg text-sm">
                                    {{ data.isTransits }}
                                </span>
                            @else
                                <span class="bg-red-300 text-red-800 px-2 py-1 rounded-lg text-sm">
                                    {{ data.isTransits }}
                                </span>
                            @endif
                        </td>
                        <td>{{ data.departure.city.name }}</td>
                        <td class="flex flex-col">
                            <span class="border-b border-gray-500">
                              {{ new Date(data.departure.time).toISOString().split('T')[0] }}
                            </span>
                            <span>
                              {{ new Date(data.departure.time).toISOString().split('T')[1].slice(0, 8) }}
                            </span>
                        </td>
                        <td>{{ data.arrival.city.name }}</td>
                        <td class="flex flex-col">
                            <span class="border-b border-gray-500">
                                {{ new Date(data.arrival.time).toISOString().split('T')[0] }}
                            </span>
                            <span>
                                {{ new Date(data.arrival.time).toISOString().split('T')[1].slice(0, 8) }}
                            </span>
                        </td>
                        <td>
                            <div class="flex flex-row gap-x-2">
                                <a href="/admin/ticket/{{ data.id }}" class="shadow-md py-1 px-3 inline-flex items-center gap-x-2 text-xs font-medium rounded-lg border border-transparent bg-green-300 text-green-800 hover:bg-green-400 focus:outline-none focus:bg-green-200 disabled:opacity-50 disabled:pointer-events-none">
                                    Detail
                                </a>
                                <a href="#" class="shadow-md py-1 px-3 inline-flex items-center gap-x-2 text-xs font-medium rounded-lg border border-transparent bg-yellow-300 text-yellow-800 hover:bg-yellow-400 focus:outline-none focus:bg-yellow-200 disabled:opacity-50 disabled:pointer-events-none">
                                    Edit
                                </a>
                            </div>
                        </td>
                    </tr>
                @else
                    <tr>
                        <td colspan="7" class="text-center">No data available</td>
                    </tr>
                @end
            </tbody>
            
        </table>
    </div>
</div>

<script>
    const api = '{{ api }}'
    const token = '{{ token }}'

    $(document).ready(function () {
    $('#searchTransitForm').on('submit', function (event) {
        event.preventDefault();

        const departureId = $('#departureId').val();
        const arrivalId = $('#arrivalId').val();

        if (!departureId || !arrivalId) {
            showToast("error", "Validation Error", "Please select both Departure and Arrival airports.");
            return;
        }

        $.ajax({
            url: `${api}/api/v1/routes/${departureId}/${arrivalId}`,
            method: 'GET',
            contentType: 'application/json',
            headers: {
                'Authorization': `Bearer ${token}`
            },
            success: function (response) {
                if (response.success) {
                    const { id, departureAirportId, arrivalAirportId, distance } = response.data;
                    showToast("success", "Success", `Route fetched successfully. Distance: ${distance} km`);
                    setTimeout(() => {
                        window.location.href = `/admin/ticket/create?routeId=${id}`;
                    }, 1000);
                } else {
                    showToast("error", "Error", response.message || "An unexpected error occurred.");
                }
            },
            error: function (xhr) {
                const errorMessage = xhr.responseJSON?.message || `Error ${xhr.status}: ${xhr.statusText}`;
                showToast("error", "Error", errorMessage);
            }
            });
        });
    });
</script>

@endslot
@end