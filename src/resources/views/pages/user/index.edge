@layout.app({ title: "User List" })
@slot('main')

<div class="px-6 py-2 w-full bg-white rounded-lg">
    <!-- Content Head -->
    <div class="flex justify-end items-center mb-2">
          @component('components/ui/modal', {
                title: 'Add Admin',
                buttonClass: 'shadow-md py-2 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-300 text-blue-800 hover:bg-blue-400 focus:outline-none focus:bg-blue-200 disabled:opacity-50 disabled:pointer-events-none',
                })
                @slot('header')
                    Add Admin
                @end
                @slot('content')
                
                    <form id="adminAddForm" class="max-w-sm mx-auto">
                        <div class="mb-5">
                            <label for="email" class="block mb-2 text-sm font-medium text-gray-900">Email</label>
                            <input type="email" id="email" name="email" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" placeholder="admin@example.com" required />
                        </div>
                        <div class="mb-5">
                            <label for="password" class="block mb-2 text-sm font-medium text-gray-900">Password</label>
                            <input type="password" id="password" name="password" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" placeholder="********" required />
                        </div>
                        <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center">Add User</button>
                    </form>

                @end
            @end
        </div>
    
        <div class="border-2 rounded-lg p-4 overflow-x-auto text-xs">
            <table class="myTable display" style="width:100%">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody class="text-center">
                    @each((user, index) in users)
                    <tr>
                        <td>{{ index + 1 }}</td>
                        <td>

                            @if(user.role !== 'Admin')
                                @component('components/ui/modal', {
                                    title: user.email,
                                    buttonClass: 'text-blue-500 underline hover:text-blue-700 cursor-pointer',
                                    })
                                    @slot('header')
                                    {{ user.email }}
                                    @end
                                    @slot('content')
                                        <ol class="relative border-s border-gray-200">                  
                                            <li class="mb-10 ms-6">            
                                                <span class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -start-3 ring-8 ring-white">
                                                    <svg class="w-2.5 h-2.5 text-blue-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"/>
                                                    </svg>
                                                </span>
                                                <h3 class="mb-1 text-lg font-semibold text-gray-900">Full Name</h3>
                                                <p class="mb-4 text-base font-normal text-gray-500">{{user.user.fullName}}</p>
                                            </li>
                                            <li class="ms-6">
                                                <span class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -start-3 ring-8 ring-white">
                                                    <svg class="w-2.5 h-2.5 text-blue-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                                        <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"/>
                                                    </svg>
                                                </span>
                                                <h3 class="mb-1 text-lg font-semibold text-gray-900">Phone Number</h3>
                                                <p class="text-base font-normal text-gray-500">{{user.user.phoneNumber}}</p>
                                            </li>
                                        </ol>
                    
                                    @end
                                @end
                            @else
                            {{ user.email }}

                            @end

                        </td>
                        <td>
                            @if(user.role == 'Admin')
                                <span class="bg-blue-500 text-white px-2 py-1 rounded-md">Admin</span>
                            @else
                                <span class="bg-purple-500 text-white px-2 py-1 rounded-md">User</span>
                            @endif
                        </td>
                        <td>
                            @if(user.isVerified)
                                <span class="bg-green-500 text-white px-2 py-1 rounded-md">Active</span>
                            @else
                                <span class="bg-red-500 text-white px-2 py-1 rounded-md">Inactive</span>
                            @endif
                        </td>
                        <td>
                            <button type="button" class="shadow-md py-1 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-yellow-300 text-yellow-800 hover:bg-yellow-400 focus:outline-none focus:bg-yellow-200 disabled:opacity-50 disabled:pointer-events-none">
                                Edit
                            </button>
                        </td>
                    </tr>
                    @else
                    <tr>
                        <td colspan="7" class="text-center">No data available</td>
                    </tr>
                    @end
                </tbody>
                
            </table>
        </div>
    </div>
    
    <script>
        $(document).ready(function () {
        $('#adminAddForm').on('submit', function (e) {
            e.preventDefault(); 
    
            const formData = {
                email: $('#email').val(),
                password: $('#password').val(),
            };
            
            const token = '{{ token }}'
    
            $.ajax({
                url: '{{ api }}/api/v1/auth/admin/register',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    showToast("success", "Success", "Admin created successfully!");
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                },
                error: function (xhr) {
                    if (xhr.responseJSON && xhr.responseJSON.errors) {
                        const errors = xhr.responseJSON.errors;
                        let errorMessages = '';
                        errors.forEach(error => {
                            errorMessages += `${error.field}: ${error.message}\n`;
                        });
                        showToast("error", "Error", errorMessages);
                    } else {
                        showToast("error", "Error", "An error occurred. Please try again.");
                    }
                },
            });
        });
    });
    
    </script>
    
    @endslot
    @end